import { SchedulerRegistry } from '@nestjs/schedule';
import { Queue } from 'bull';
import { ConfigService } from '@nestjs/config';
import { AttendanceEventsService } from '@/modules/attendance';
export declare class AttendanceCronService {
    private readonly attendanceQueue;
    private readonly eventsService;
    private readonly configService;
    private readonly schedulerRegistry;
    private readonly logger;
    private readonly timezone;
    private readonly enableDailyProcessing;
    private readonly enableRetryFailed;
    private readonly enableCleanup;
    constructor(attendanceQueue: Queue, eventsService: AttendanceEventsService, configService: ConfigService, schedulerRegistry: SchedulerRegistry);
    handleDailyProcessing(): Promise<void>;
    handleRetryFailed(): Promise<void>;
    handlePendingEvents(): Promise<void>;
    handleCleanupLogs(): Promise<void>;
    handleCleanupEvents(): Promise<void>;
    handleDailyReports(): Promise<void>;
    handleWeeklySummary(): Promise<void>;
    handleMonthlyReport(): Promise<void>;
    handleQueueHealthCheck(): Promise<void>;
    handleAutoApprove(): Promise<void>;
    private sendCronAlert;
    getCronJobsStatus(): any[];
    stopCronJob(name: string): void;
    startCronJob(name: string): void;
}
